# ------ Database ------

[data_storage]
# firmware_file_storage_directory = /media/data/fact_fw_data
mongo_server = localhost
mongo_port = 27018
# main_database = fact_main
# intercom_database_prefix = fact_intercom
# statistic_database = fact_stats
# view_storage = fact_views
# Threshold for extraction of analysis results into a file instead of DB storage
report_threshold = 100000

# Authentication
# NO REFACTOR ASAP
# db_admin_user = fact_admin
# db_admin_pw = 6fJEb5LkV2hRtWq0
# db_readonly_user = fact_readonly
# db_readonly_pw = RFaoFSr8b6BMSbzt

# User Management
# user_database  = sqlite:////media/data/fact_auth_data/fact_users.db
# password_salt = 5up3r5tr0n6_p455w0rd_5417

# Database Structure
# Get this from mongo
# variety_path = bin/variety.js
# structural_threshold = 40

[Logging]
# logFile=/tmp/fact_main.log
# mongoDbLogFile=/tmp/fact_mongo.log
logLevel=WARNING


# ------ Unpack Plugins ------

[unpack]
threads = 4
# file types in whitelist are not extracted
# too complex.
# whitelist = audio/mpeg, image/png, image/jpeg, image/gif, application/x-shockwave-flash, video/mp4, video/mpeg, video/quicktime, video/x-msvideo, video/ogg, text/plain, application/x-object

# extract until this layer
max_depth = 8
memory_limit = 256

# ------ Analysis Plugins ------

[default_plugins]
# choose preselected plugins
# trust that all plugins register with PluginMeta
#default = cpu_architecture, crypto_material, exploit_mitigations, known_vulnerabilities, software_components, users_and_passwords
# minimal =
# If required, choose a custom set of plugins, as in the example below
# custom = init_systems, printable_strings

# -- plugin settings --

[base64_decoder]
# TODO: SMT prover?
# string_min_length = 15
# It might be useful to set base64_section_min_length = string_min_length / 3 * 4
# base64_section_min_length = 20

#[binwalk]
#threads = 1

#[cpu_architecture]
#threads = 1

#[crypto_material]
#threads = 1

#[cwe_checker]
#threads = 0

#[elf_analysis]
#threads = 4

#[exploit_mitigations]
#threads = 4

#[file_hashes]
#threads = 2
#hashes = md5, sha1, sha256, sha512, ripemd160, whirlpool

#[init_systems]
#threads = 2

#[input_vectors]
#threads = 4

#[ip_and_uri_finder]
#threads = 2

#[malware_scanner]
#threads = 4

#[printable_strings]
#threads = 2
#min_length = 6

#[software_components]
#threads = 2

#[source_code_analysis]
#threads = 2

#[string_evaluator]
#threads = 2

#[qemu_exec]
#threads = 2

#[users_and_passwords]
#threads = 4

# ------ Web Interface ------

[database]
#results_per_page = 10
#number_of_latest_firmwares_to_display = 10


# !!!! Do not edit below this line unless you know exactly what you are doing !!!!

#[ExpertSettings]
#block_delay = 0.1
#ssdeep_ignore = 1
#communication_timeout = 60
#unpack_threshold = 0.8
#unpack_throttle_limit = 50
#throw_exceptions = false
#authentication = false
#nginx = false
#intercom_poll_delay = 1.0
#[uwsgi]

## bind to the specified UNIX/TCP socket using HTTP protocol
#http-socket = 127.0.0.1:5000

## enable the stats server on the specified address
## (allows you to export uWSGIâ€™s internal statistics as JSON)
#stats = 127.0.0.1:9191

## plugin: python: load .wsgi file
#wsgi-file = flask_app_wrapper.py

# set default WSGI callable name
#callable = app

# spawn the specified number of workers/processes
#workers = 5
#threads = 2

# enable master process (will respawn your processes when they die)
#master = true

# enable Python threads support
#enable-threads = true

# increse maximimum temp file size
#uwsgi_max_temp_file_size = 4096m

#uwsgi_read_timeout = 600

#uwsgi_send_timeout = 600worker_processes auto;

#events {
#	worker_connections 768;
#}

#http {
#	sendfile on;
#	access_log /var/log/nginx/access.log;
#	error_log /var/log/nginx/error.log;
#	gzip on;

#	upstream restapi {
#		server app:8080;
#	}

#	upstream first {
#		server app:8001;
#	}

#	upstream second {
#		server app:8002;
#	}

#	upstream third {
#		server app:8003;
#	}

#	upstream fourth {
#		server app:8004;
#	}
##
###########################################################################
#
#
#######################################
#
	#

		#


